name: Build and Deploy production

on: 
  push:
    branches: version-15

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps: 
      - name: Install SSH Keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.BUILD_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H -p ${{ secrets.BUILD_SSH_PORT }} ${{ secrets.BUILD_SSH_HOST }} > ~/.ssh/known_hosts
      - name: Build
        run: | 
          ssh -o ServerAliveInterval=60 ${{ secrets.BUILD_SSH_USER }}@${{ secrets.BUILD_SSH_HOST }} -p ${{ secrets.BUILD_SSH_PORT }} \
          'echo "$DOCKER_TOKEN" | docker login --username "$DOCKER_USERNAME" --password-stdin || { echo "Failed to docker login" && exit 1; } \
          cd '"${{ secrets.BUILD_WORKDIR }}"' && ./build.sh'
      - name: Clean Up
        run: rm -rf ~/.ssh
  
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEPLOY_SSH_HOST }} > ~/.ssh/known_hosts
      - name: Deploy
        run: ssh -o ServerAliveInterval=60 ${{ secrets.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SSH_HOST }} "cd ${{ secrets.DEPLOY_WORKDIR }} && ./deploy.sh"
      - name: Clean Up
        run: rm -rf ~/.ssh